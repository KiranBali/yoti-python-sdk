[tox]
envlist = py26,py27,py33,py34,py35,py36
          {py26,py27,py33,py34,py35,py36}-{oldest,cryptography14,requests26,protobuf30}
          {py26,py36}-macOS
          py36-macOS-{oldest,cryptography14,requests26,protobuf30}
skip_missing_interpreters = True

[testenv]
commands = py.test -c {posargs:pytest.ini}
whitelist_externals = py.test
                      macOS: env


; Tox doesn't allow us to combine main requirements.txt with specific deps versions,
; since it will result in 'multiple deps error'.
; The solution is to omit those deps in a tox-specific requirements.txt file
; and maintain 2 sets of deps by explicitly stating them in tox.ini
deps =
       protobuf30,oldest: protobuf==3.0.0
       requests20,oldest: requests==2.0.0
       cryptography14,oldest: cryptography==1.4
       requests26: requests>=2.6,<2.7
       -rrequirements_tox.txt

[testenv:py26]
; Make sure those are the same as in requirements.txt
; they will be used in envs that do not specify specific, older versions of these packages.
deps =
    cryptography==1.5.2
    protobuf==3.1.0.post1
    requests==2.11.1
    -rrequirements_tox.txt

platform  = win32|linux2|linux|cygwin

[testenv:py27]
deps = {[testenv:py26]deps}

[testenv:py33]
deps = {[testenv:py26]deps}

[testenv:py34]
deps = {[testenv:py26]deps}

[testenv:py35]
deps = {[testenv:py26]deps}

[testenv:py36]
platform = {[testenv:py26]platform}
deps = {[testenv:py26]deps}

[testenv:py36-oldest]
platform = {[testenv:py36]platform}

[testenv:py36-requests26]
platform = {[testenv:py36]platform}

[testenv:py36-cryptography14]
platform = {[testenv:py36]platform}

[testenv:py36-protobuf30]
platform = {[testenv:py36]platform}

[testenv:macOS]
; On macOS and Python versions where there aren't any binary wheels for `cryptography` yet
; We need to compile it from sources and this requires openssl headers
; obtained with `homebrew install openssl`
install_command = env LDFLAGS="-L/usr/local/opt/openssl/lib" CFLAGS="-I/usr/local/opt/openssl/include" pip install {opts} {packages}
platform = darwin

[testenv:py26-macOS]
install_command = {[testenv:macOS]install_command}
platform = {[testenv:macOS]platform}

[testenv:py36-macOS]
install_command = {[testenv:macOS]install_command}
platform = {[testenv:macOS]platform}

[testenv:py36-macOS-oldest]
install_command = {[testenv:macOS]install_command}
platform = {[testenv:macOS]platform}

[testenv:py36-macOS-requests26]
install_command = {[testenv:macOS]install_command}
platform = {[testenv:macOS]platform}

[testenv:py36-macOS-cryptography14]
install_command = {[testenv:macOS]install_command}
platform = {[testenv:macOS]platform}

[testenv:py36-macOS-protobuf30]
install_command = {[testenv:macOS]install_command}
platform = {[testenv:macOS]platform}
